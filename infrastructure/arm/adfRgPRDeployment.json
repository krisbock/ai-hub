{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "defaultValue": ""
        },
        "triggerDocBlobWithoutIntel_properties_singleAnalyzeDocument_withoutIntel_parameters_fileName": {
            "type": "string",
            "defaultValue": "@trigger().outputs.body.fileName"
        },
        "triggerDocBlobWithoutIntel_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": ""
        },
        "blobStoreDoc_properties_typeProperties_serviceEndpoint": {
            "type": "string",
            "defaultValue": ""
        },
        "GPT4Deployment_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().open_ai_base}"
        },
        "GPT4Deployment_properties_typeProperties_aadResourceId": {
            "type": "string",
            "defaultValue": "https://cognitiveservices.azure.com"
        },
        "storageaccountcontainerBatch": {
            "type": "string",
            "defaultValue": ""
        },
        "storageaccounturl": {
            "type": "string",
            "defaultValue": ""
        },
        "openAIAPI": {
            "type": "string",
            "defaultValue": ""
        },
        "dataRefreshIntervalInMinutes": {
            "type": "string",
            "defaultValue": "60"
        },
        "storageAccountResourceId": {
            "type": "string",
            "defaultValue": ""
        },
        "gpt4DeploymentName": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/AzureOpenAI')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "GPT4Deployment",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "open_ai_base": {
                            "value": "@dataset().openai_api_base",
                            "type": "Expression"
                        },
                        "gpt4deployment": {
                            "value": "@dataset().gpt4_deployment_name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "openai_api_base": {
                        "type": "String"
                    },
                    "gpt4_deployment_name": {
                        "type": "string"
                    },
                    "relative_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@dataset().relative_url",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/GPT4Deployment')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/blobfile')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobStoreDoc",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "container": {
                        "type": "string",
                        "defaultValue": "na"
                    },
                    "filename": {
                        "type": "string",
                        "defaultValue": "na"
                    },
                    "folder": {
                        "type": "string",
                        "defaultValue": "na"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().filename",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobStoreDoc')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tempfile')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobStoreDoc",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "filename": {
                        "type": "string",
                        "defaultValue": "tempfile.txt"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().filename",
                            "type": "Expression"
                        },
                        "container": "temp"
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobStoreDoc')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/blob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobStoreDoc",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "container": {
                        "type": "string",
                        "defaultValue": "na"
                    },
                    "endpoint": {
                        "type": "string",
                        "defaultValue": "na"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobStoreDoc')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/singleAnalyzeDocument_withoutIntel')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy to curated",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "deleteFilesAfterCompletion": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "blobfile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.storageAccountContainer",
                                        "type": "Expression"
                                    },
                                    "filename": {
                                        "value": "@pipeline().parameters.fileName",
                                        "type": "Expression"
                                    },
                                    "folder": " "
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "blobfile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": "curated",
                                    "filename": {
                                        "value": "@pipeline().parameters.fileName",
                                        "type": "Expression"
                                    },
                                    "folder": {
                                        "value": "@pipeline().parameters.storageaccounturl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "If batch",
                        "description": "Run Patient Referral pipeline if not batch",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Copy to curated",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().parameters.batch",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Execute Pipeline Patient Referral",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "patient_referral",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ingestionStatus": {
                                                "value": "@variables('ingestionStatus')",
                                                "type": "Expression"
                                            },
                                            "storageaccountcontainer": {
                                                "value": "@pipeline().parameters.storageAccountContainer",
                                                "type": "Expression"
                                            },
                                            "fileName": {
                                                "value": "@pipeline().parameters.fileName",
                                                "type": "Expression"
                                            },
                                            "batch": {
                                                "value": "@pipeline().parameters.batch",
                                                "type": "Expression"
                                            },
                                            "openAIAPI": {
                                                "value": "@pipeline().parameters.openAIAPI",
                                                "type": "Expression"
                                            },
                                            "dataRefreshIntervalInMinutes": {
                                                "value": "@pipeline().parameters.dataRefreshIntervalInMinutes",
                                                "type": "Expression"
                                            },
                                            "storageaccounturl": {
                                                "value": "@pipeline().parameters.storageaccounturl",
                                                "type": "Expression"
                                            },
                                            "storageAccountResourceId": {
                                                "value": "@pipeline().parameters.storageAccountResourceId",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "fileName": {
                        "type": "string"
                    },
                    "storageAccountContainer": {
                        "type": "string"
                    },
                    "batch": {
                        "type": "bool",
                        "defaultValue": false
                    },
                    "dataRefreshIntervalInMinutes": {
                        "type": "string"
                    },
                    "openAIAPI": {
                        "type": "string"
                    },
                    "storageAccountResourceId": {
                        "type": "string"
                    },
                    "storageaccounturl": {
                        "type": "string"
                    }
                },
                "variables": {
                    "indexName": {
                        "type": "String"
                    },
                    "indexID": {
                        "type": "String"
                    },
                    "ingestionStatus": {
                        "type": "String",
                        "defaultValue": "Running"
                    },
                    "processedfolder": {
                        "type": "String"
                    },
                    "resultID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Not using Document Inteligence"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-21T09:05:03Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/blobfile')]",
                "[concat(variables('factoryId'), '/pipelines/patient_referral')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/batchAnalyzeDocuments_withoutIntel')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get documents",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "blob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.storageaccountcontainer",
                                        "type": "Expression"
                                    },
                                    "endpoint": {
                                        "value": "@pipeline().parameters.storageaccounturl",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If contains files",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ForEach Document File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater( length(activity('Get documents').output.childItems), 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Execute Patient Referral copy",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "patient_referral",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ingestionStatus": "succeeded",
                                            "storageaccountcontainer": {
                                                "value": "@pipeline().parameters.storageaccountcontainer",
                                                "type": "Expression"
                                            },
                                            "batch": true,
                                            "openAIAPI": {
                                                "value": "@pipeline().parameters.openAIAPI",
                                                "type": "Expression"
                                            },
                                            "dataRefreshIntervalInMinutes": {
                                                "value": "@pipeline().parameters.dataRefreshIntervalInMinutes",
                                                "type": "Expression"
                                            },
                                            "storageaccounturl": {
                                                "value": "@pipeline().parameters.storageaccounturl",
                                                "type": "Expression"
                                            },
                                            "storageAccountResourceId": {
                                                "value": "@pipeline().parameters.storageAccountResourceId",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ForEach Document File",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get documents",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get documents').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "childAnalyzeDocuments",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "singleAnalyzeDocument_withoutIntel",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "fileName": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "storageAccountContainer": {
                                                "value": "@pipeline().parameters.storageaccountcontainer",
                                                "type": "Expression"
                                            },
                                            "batch": true,
                                            "dataRefreshIntervalInMinutes": {
                                                "value": "@pipeline().parameters.dataRefreshIntervalInMinutes",
                                                "type": "Expression"
                                            },
                                            "openAIAPI": {
                                                "value": "@pipeline().parameters.openAIAPI",
                                                "type": "Expression"
                                            },
                                            "storageAccountResourceId": {
                                                "value": "@pipeline().parameters.storageAccountResourceId",
                                                "type": "Expression"
                                            },
                                            "storageaccounturl": {
                                                "value": "@pipeline().parameters.storageaccounturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "storageaccountcontainer": {
                        "type": "string",
                        "defaultValue": "[parameters('storageaccountcontainerBatch')]"
                    },
                    "storageaccounturl": {
                        "type": "string",
                        "defaultValue": "[parameters('storageaccounturl')]"
                    },
                    "dataRefreshIntervalInMinutes": {
                        "type": "string",
                        "defaultValue": "[parameters('dataRefreshIntervalInMinutes')]"
                    },
                    "openAIAPI": {
                        "type": "string",
                        "defaultValue": "[parameters('openAIAPI')]"
                    },
                    "storageAccountResourceId": {
                        "type": "string",
                        "defaultValue": "[parameters('storageAccountResourceId')]"
                    }
                },
                "variables": {
                    "top_p": {
                        "type": "String"
                    },
                    "temperature": {
                        "type": "String"
                    },
                    "resultID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Not using Document Inteligence"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-21T09:05:04Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/blob')]",
                "[concat(variables('factoryId'), '/pipelines/patient_referral')]",
                "[concat(variables('factoryId'), '/pipelines/singleAnalyzeDocument_withoutIntel')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/patient_referral')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Check if success",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Check and wait until ingestion complete",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('openaiStatus'),'succeeded')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Fail1",
                                    "type": "Fail",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Ingestion failed or timed out",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Check and wait until ingestion complete",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "Ingest to AI Search",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@or(equals(variables('openaiStatus'),'succeeded'),equals(variables('openaiStatus'),'failed'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Check if OpenAI completed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Set OpenAI ingestion status",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(variables('openaiStatus'),'notRunning'),equals(variables('openaiStatus'),'running'))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Wait and check OpenAI again in a bit",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 10
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set OpenAI ingestion status",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "see if openai ingestion completed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "openaiStatus",
                                        "value": {
                                            "value": "@activity('see if openai ingestion completed').output.status",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "see if openai ingestion completed",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {},
                                        "url": {
                                            "value": "@{pipeline().parameters.openAIAPI}openai/extensions/on-your-data/ingestion-jobs/@{pipeline().parameters.aiSearchIndexName}?api-version=2023-10-01-preview",
                                            "type": "Expression"
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": "https://cognitiveservices.azure.com"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.00:15:00"
                        }
                    },
                    {
                        "name": "Ingest to AI Search",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Check if index exists",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "PUT",
                            "headers": {
                                "Content-Type": "application/json",
                                "storageEndpoint": {
                                    "value": "@pipeline().parameters.storageaccounturl",
                                    "type": "Expression"
                                },
                                "storageConnectionString": {
                                    "value": "ResourceId=@{pipeline().parameters.storageAccountResourceId}",
                                    "type": "Expression"
                                },
                                "storageContainer": "curated"
                            },
                            "url": {
                                "value": "@{pipeline().parameters.openAIAPI}openai/extensions/on-your-data/ingestion-jobs/@{pipeline().parameters.aiSearchIndexName}?api-version=2023-10-01-preview",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\"completionAction\":\"keepAllAssets\",\"dataRefreshIntervalInMinutes\":@{pipeline().parameters.dataRefreshIntervalInMinutes},\"chunkSize\": @{pipeline().parameters.chunkSize}}",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://cognitiveservices.azure.com"
                            }
                        }
                    },
                    {
                        "name": "Check if index exists",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().parameters.searchServiceEndpoint}/indexes('@{pipeline().parameters.aiSearchIndexName}')?api-version=2023-11-01",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://search.azure.com"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ingestionStatus": {
                        "type": "string",
                        "defaultValue": "succeeded"
                    },
                    "storageaccountcontainer": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "batch": {
                        "type": "bool",
                        "defaultValue": false
                    },
                    "searchServiceEndpoint": {
                        "type": "string"
                    },
                    "aiSearchIndexName": {
                        "type": "string"
                    },
                    "openAIAPI": {
                        "type": "string"
                    },
                    "dataRefreshIntervalInMinutes": {
                        "type": "string"
                    },
                    "chunkSize": {
                        "type": "string"
                    },
                    "storageaccounturl": {
                        "type": "string"
                    },
                    "storageAccountResourceId": {
                        "type": "string"
                    },
                    "embeddingDeploymentName": {
                        "type": "string"
                    }
                },
                "variables": {
                    "openaiStatus": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Create RAG"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-21T09:05:02Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/triggerDocBlobWithoutIntel')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "singleAnalyzeDocument_withoutIntel",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "fileName": "[parameters('triggerDocBlobWithoutIntel_properties_singleAnalyzeDocument_withoutIntel_parameters_fileName')]"
                        }
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/docs/blobs/",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('triggerDocBlobWithoutIntel_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/singleAnalyzeDocument_withoutIntel')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/triggerBatchDoc')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "batchAnalyzeDocuments_withoutIntel",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 15,
                        "startTime": "2024-04-29T19:33:00",
                        "timeZone": "W. Europe Standard Time"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/batchAnalyzeDocuments_withoutIntel')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/blobStoreDoc')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "serviceEndpoint": "[parameters('blobStoreDoc_properties_typeProperties_serviceEndpoint')]",
                    "accountKind": "StorageV2"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/GPT4Deployment')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "open_ai_base": {
                        "type": "string",
                        "defaultValue": "@{linkedService().open_ai_base}"
                    },
                    "gpt4deployment": {
                        "type": "string",
                        "defaultValue": "[parameters('gpt4DeploymentName')]"
                    }
                },
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "[parameters('GPT4Deployment_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "ManagedServiceIdentity",
                    "aadResourceId": "[parameters('GPT4Deployment_properties_typeProperties_aadResourceId')]"
                }
            },
            "dependsOn": []
        }
    ]
}